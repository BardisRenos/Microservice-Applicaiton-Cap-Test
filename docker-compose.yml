version: "3"
services:
  discovery-server:
    image: renosbardis/discovery-service:latest
    container_name: discovery-server
    restart: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - test-network

  api-gateway:
    image: renosbardis/api-gateway:latest
    container_name: api-gateway
    restart: always
    ports:
      - "8888:8888"
    expose:
      - "8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
    links:
      - discovery-server
    networks:
      - test-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - test-network

  accounts-service:
    image: renosbardis/accounts-service:latest
    container_name: accounts-service
    restart: always
    ports:
      - "8081:8081"
    expose:
      - "8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:accountdb
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - test-network

  customers-service:
    image: renosbardis/customer-service:latest
    container_name: customers-service
    restart: always
    ports:
      - "8083:8083"
    expose:
      - "8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:customerdb
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - test-network

  transactions-service:
    image: renosbardis/transaction-service:latest
    container_name: transactions-service
    restart: always
    ports:
      - "8084:8084"
    expose:
      - "8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:transactiondb
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - test-network

  notification-service:
    image: renosbardis/notification-service:latest
    container_name: notification-service
    restart: always
    ports:
      - "8085:8085"
    expose:
      - "8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:notificationdb
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - test-network

networks:
  test-network:
    driver: bridge